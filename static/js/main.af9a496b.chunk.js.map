{"version":3,"sources":["Phone.js","NaverMap.js","App.js","serviceWorker.js","index.js","sw.jpg","sw_1.jpg","sw_3.jpg","SW_6_p.jpg","SW_10_f.jpg","SW_11.jpg","ssw_1.jpg","draw.png","flower.jpg","message_icon_touched.png","phone_icon_touched.png"],"names":["Phone","_ref","phone","react_default","a","createElement","className","href","concat","src","iconPhone","alt","NaverMap","_this$props","this","props","id","coord","title","point","Object","construct","naver","maps","LatLng","toConsumableArray","map","Map","center","zoom","size","Size","Marker","position","icon","url","anchor","Point","setMap","_this$props2","desc","target","rel","src_Phone","Component","Contact","iconSMS","mode","process","renderMode","lhs","rhs","delimiter","arguments","length","undefined","Fragment","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMessageNameChange","e","setState","messageName","currentTarget","value","handleMessageBodyChange","messageBody","handleMessageSubmit","_this$state","state","messageIsSubmitting","database","ref","push","name","body","date","Date","now","error","console","reward","rewardMe","messages","firebase","_this2","root","document","getElementById","style","height","clientHeight","window","addEventListener","on","data","objectSpread","defineProperty","key","val","_this3","_this$state2","messageDisabled","img1","flowerURL","App_Contact","build_image_gallery_default","items","original","sw11","thumbnail","sw0","sw1","sw3","sw6","sw10","ssw1","showFullscreenButton","showPlayButton","src_NaverMap","type","maxLength","onChange","disabled","build_default","onClick","keys","_messages$id","sort","_ref3","format","Boolean","location","hostname","match","swal","text","button","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.af9a496b.chunk.js","sourcesContent":["import React from 'react';\nimport iconPhone from './phone_icon_touched.png'\n\nconst Phone = ({ phone }) => (\n  <a className=\"icon\" href={`tel:${phone}`}>\n    <img src={iconPhone} alt=\"tel\" />\n  </a>\n)\n\nexport default Phone\n","import React, { Component } from 'react'\nimport Phone from './Phone'\n\n/* global naver */\n\nclass NaverMap extends Component {\n  componentDidMount() {\n    const { id, coord, title } = this.props\n\n\t\tconst point = new naver.maps.LatLng(...coord)\n    const map = new naver.maps.Map(id, { center: point, zoom: 11 });\n\n\t\tconst size = new naver.maps.Size(28, 37);\n\t\tconst marker = new naver.maps.Marker({\n      position: point,\n      icon: {\n          url: 'http://static.naver.net/maps/v3/pin_default.png',\n          size: size,\n          anchor: new naver.maps.Point(14, 37),\n          title,\n      }\n    });\n\n\t\tmarker.setMap(map);\n  }\n\n  render() {\n    const { id, url, title, desc, phone } = this.props\n\n    return (\n      <div className=\"naver-map\">\n        <div id={id} className=\"map\"></div>\n\n        <a className=\"btn\" href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          지도 크게 보기\n        </a>\n\n        <div className=\"info\">\n          <div>\n            <div className=\"title font-body-1\">\n              {title}\n            </div>\n            <div className=\"desc font-body-2\">\n              {desc}\n            </div>\n            {phone && (\n              <div className=\"phone font-body-2\">\n                {phone}\n              </div>\n            )}\n          </div>\n          <div>\n            {phone && <Phone phone={phone} />}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NaverMap\n","import React, { Component } from 'react';\nimport format from 'date-fns/format'\nimport './App.css';\n\nimport img1 from './draw.png'\nimport flowerURL from './flower.jpg'\n// import photo0 from './photo.jpg'\nimport sw0 from './sw.jpg'\nimport sw1 from './sw_1.jpg'\n// import sw2 from './sw_2.jpg'\nimport sw3 from './sw_3.jpg'\n// import sw4 from './sw_6.jpg'\nimport sw6 from './SW_6_p.jpg'\n// import sw9 from './SW_9_p.jpg'\n// import sw10 from './sw_10.jpg'\nimport sw10 from './SW_10_f.jpg'\nimport sw11 from './SW_11.jpg'\n// import sw12 from './SW_12.jpg'\n// import sw13 from './SW_13.jpg'\nimport ssw1 from './ssw_1.jpg'\n// import ssw2 from './ssw_2.jpg'\n\nimport Reward from 'react-rewards'\n\nimport iconSMS from './message_icon_touched.png'\n\nimport ImageGallery from 'react-image-gallery'\n\nimport Phone from './Phone'\nimport NaverMap from './NaverMap'\n\nconst Contact = ({ phone }) => (\n  <div className=\"contact\">\n    <Phone phone={phone} />\n    <a className=\"sms\" href={`sms:${phone}`}>\n      <img src={iconSMS} alt=\"tel\" />\n    </a>\n  </div>\n)\n\nconst mode = process.env.REACT_APP_MODE\n\nfunction renderMode(lhs, rhs, delimiter = null) {\n  if (mode === 'b') {\n    return <>{rhs}{delimiter}{lhs}</>\n  } else {\n    return <>{lhs}{delimiter}{rhs}</>\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      messageName: '',\n      messageBody: '',\n      messageIsSubmitting: false,\n      messages: {},\n    }\n\n    const { firebase } = this.props\n    this.database = firebase.database()\n  }\n\n  componentDidMount() {\n    const root = document.getElementById('root')\n    root.style.height = `${document.body.clientHeight}px`\n\n    window.addEventListener('orientationchange', () => {\n      root.style.height = `${document.body.clientHeight}px`\n    })\n\n    const ref = this.database.ref('messages')\n\n    ref.on('child_added', data => {\n      this.setState({\n        messages: {\n          ...this.state.messages,\n          [data.key]: data.val(),\n        },\n      })\n    })\n  }\n\n  handleMessageNameChange = e => {\n    this.setState({ messageName: e.currentTarget.value })\n  }\n\n  handleMessageBodyChange = e => {\n    this.setState({ messageBody: e.currentTarget.value })\n  }\n\n  handleMessageSubmit = () => {\n    const { messageName, messageBody, messageIsSubmitting } = this.state\n    if (!messageName || !messageBody || messageIsSubmitting) {\n      return\n    }\n\n    this.setState({ messageIsSubmitting: true })\n\n    this.database.ref('messages').push(\n      { name: messageName, body: messageBody, date: Date.now() },\n      error => {\n        if (error) {\n          this.setState({ messageIsSubmitting: false })\n\n          console.error(error)\n          return\n        }\n\n        this.setState({ messageIsSubmitting: false, messageBody: '' })\n        this.reward.rewardMe()\n      },\n    )\n  }\n\n  render() {\n    const {\n      messageName,\n      messageBody,\n      messageIsSubmitting,\n      messages,\n    } = this.state\n\n    const messageDisabled = !messageName || !messageBody || messageIsSubmitting\n\n    return (\n      <>\n        <section className=\"panel panel1\">\n          <p className=\"font-title\">\n            {renderMode(\n              '송원길·유진옥의 아들 송승근',\n              '최훈·성계숙의 딸 최원아',\n              <br />,\n            )}\n          </p>\n\n          <div className=\"img\">\n            <img src={img1} alt=\"img1\" />\n          </div>\n\n          <p className=\"panel1-lower font-body-1\">\n            2019. 3. 9. 토 오후 1시\n            <br />\n            서울대학교 연구공원 웨딩홀\n          </p>\n        </section>\n        <section className=\"panel panel2\">\n          <p>\n            <img className=\"flower\" src={flowerURL} alt=\"flower\" />\n          </p>\n\n          <p className=\"font-body-2\">\n            31년 만에 드디어 만나 하나가 됩니다.\n            <br />\n            서로를 주어진대로 받아들이고\n            <br />\n            언제나 함께 하겠습니다.\n            <br />\n          </p>\n\n          <p className=\"font-body-2\">\n            아껴주신 여러분 덕분에\n            <br />\n            부족하고 이기적인 저희가\n            <br />\n            서로의 모자람을 안아주는 법을 배웠습니다.\n            <br />\n            사랑과 지혜로 이끌어 주셔서 감사합니다.\n            <br />\n          </p>\n\n          <p className=\"font-body-1\">\n            {renderMode(\n              <><sup>신랑</sup> <b>송승근</b></>,\n              <><sup>신부</sup> <b>최원아</b></>,\n              ' · ',\n            )}\n          </p>\n        </section>\n\n        <div className=\"panel panel-contact\">\n          <h2 className=\"title font-title\">\n            연락하기\n          </h2>\n\n          <div className=\"contact-section font-body-1\">\n            {renderMode(\n              <div className=\"contact-main\">\n                <div>\n                  신랑 <b className=\"name\">송승근</b>\n                </div>\n                <Contact phone={\"010-2607-3098\"} />\n              </div>,\n              <div className=\"contact-main\">\n                <div>\n                  신부 <b className=\"name\">최원아</b>\n                </div>\n                <Contact phone={\"010-3481-0607\"} />\n              </div>,\n            )}\n          </div>\n\n          <div className=\"contact-section font-body-1\">\n            <div className=\"row\">\n              {renderMode(\n                <div className=\"col\">\n                  <h4>신랑측 혼주</h4>\n\n                  <div className=\"contact-sub\">\n                    아버지 <b className=\"name\">송원길</b>\n                    <Contact phone={\"010-6428-3098\"} />\n                  </div>\n\n                  <div className=\"contact-sub\">\n                    어머니 <b className=\"name\">유진옥</b>\n                    <Contact phone={\"010-8979-3098\"} />\n                  </div>\n                </div>,\n                <div className=\"col\">\n                  <h4>신부측 혼주</h4>\n\n                  <div className=\"contact-sub\">\n                    아버지 <b className=\"name\">최 훈</b>\n                    <Contact phone={\"010-9400-5136\"} />\n                  </div>\n\n                  <div className=\"contact-sub\">\n                    어머니 <b className=\"name\">성계숙</b>\n                    <Contact phone={\"010-2686-3977\"} />\n                  </div>\n                </div>,\n              )}\n            </div>\n          </div>\n        </div>\n\n        <ImageGallery\n          items={[\n            {\n              original: sw11,\n              thumbnail: sw11,\n            },\n            {\n              original: sw0,\n              thumbnail: sw0,\n            },\n            {\n              original: sw1,\n              thumbnail: sw1,\n            },\n            {\n              original: sw3,\n              thumbnail: sw3,\n            },\n            {\n              original: sw6,\n              thumbnail: sw6,\n            },\n            // {\n            //   original: sw9,\n            //   thumbnail: sw9,\n            // },\n            {\n              original: sw10,\n              thumbnail: sw10,\n            },\n            // {\n            //   original: sw12,\n            //   thumbnail: sw12,\n            // },\n            // {\n            //   original: sw13,\n            //   thumbnail: sw13,\n            // },\n            {\n              original: ssw1,\n              thumbnail: ssw1,\n            },\n          ]}\n          showFullscreenButton={false}\n          showPlayButton={false}\n        />\n\n        <div className=\"section\">\n          <h2 className=\"font-title\">\n            오시는 길 - 예식장\n          </h2>\n\n          <NaverMap\n            id=\"mapWedding\"\n            coord={[37.465759, 126.959450]}\n            url=\"https://map.naver.com/?mapmode=0&lng=d03a3762ede7373d26039e846894ed5f49bf51c2bceffade43d1b5bb6034d0c7&pinId=13321741&lat=b31ce09de512f68477b8fb490ef31d53&dlevel=12&enc=b64&pinType=site\"\n            title=\"서울대학교 연구공원 웨딩홀\"\n            desc={\n              <>\n                서울특별시 관악구 관악로 1<br />연구공원 본관 1층<br />\n              </>\n            }\n            phone=\"02-878-0465\"\n          />\n        </div>\n\n        <p className=\"warning\">\n          주차는 무료이며 낙성대 방향 서울대 후문 쪽으로 오셔야 합니다.<br />\n          서울대 정.후문을 통과하시면 통행료 1,500원이 부과됩니다.\n        </p>\n\n        <div className=\"section\">\n          {mode === 'f' ? (\n            <h2 className=\"font-title\">\n              대전에서 오시는 길 - 셔틀버스\n            </h2>\n          ) : (\n            <h2 className=\"font-title\">\n              오시는 길 - 대전 셔틀버스\n            </h2>\n          )}\n\n          <NaverMap\n            id=\"mapBus\"\n            coord={[36.363591, 127.325004]}\n            url=\"https://map.naver.com/?mapmode=0&lng=898e0f6430e307c124aafdca2915297b&pinId=16094680&pinType=site&lat=abfbf69f3c4a8ec1ed8654d8d9f90095&dlevel=12&enc=b64\"\n            title=\"대전 월드컵경기장 주차장\"\n            desc={\n              <>\n                대전광역시 유성구 월드컵대로 32, GS25 편의점 근처<br />\n                당일 오전 10시 출발\n              </>\n            }\n          />\n        </div>\n\n        <div className=\"panel\">\n          <div className=\"message-container\">\n            <h2 className=\"message-title font-title\">\n              축하 인사를 남겨주세요\n            </h2>\n            <ul className=\"message-form font-body-1\">\n              <li>\n                <span className=\"tt\">성함</span>\n                <input\n                  type=\"text\"\n                  maxLength=\"10\"\n                  value={messageName || ''}\n                  onChange={this.handleMessageNameChange}\n                  disabled={messageIsSubmitting}\n                />\n              </li>\n              <li>\n                <span className=\"tt\">메세지</span>\n                <input\n                  type=\"text\"\n                  maxLength=\"300\"\n                  value={messageBody || ''}\n                  onChange={this.handleMessageBodyChange}\n                  disabled={messageIsSubmitting}\n                />\n              </li>\n              <Reward\n                ref={(ref) => { this.reward = ref }}\n                type='confetti'\n              >\n                <button\n                  className={`btn ${messageDisabled ? 'disabled' : ''}`}\n                  disabled={messageDisabled}\n                  onClick={this.handleMessageSubmit}\n                >\n                  메시지 남기기\n                </button>\n              </Reward>\n            </ul>\n\n            <div className=\"messages font-message\">\n              {Object.keys(messages)\n                .map(id => {\n                  const { name, body, date } = messages[id]\n                  return { id, name, body, date }\n                })\n                .sort((lhs, rhs) => lhs.date < rhs.date ? 1 : -1)\n                .map(({ id, name, body, date }) => (\n                  <div className=\"message\" key={id}>\n                    <div className=\"date\">{format(date, 'YYYY-MM-DD hh:mm a')}</div>\n                    <div className=\"name\">{name}</div>\n                    <div className=\"body\">{body}</div>\n                  </div>\n                ))\n              }\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport firebase from 'firebase/app'\nimport 'firebase/database';\n\nimport 'normalize.css'\nimport 'react-image-gallery/styles/css/image-gallery.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport swal from 'sweetalert'\n\nswal({\n  title: \"차를 가지고 오신다면\",\n  text: `주차는 무료이며 낙성대 방향 서울대 후문 쪽으로 오셔야 합니다.\\n\\n 서울대 정.후문을 통과하시면 통행료 1,500원이 부과됩니다.`,\n  button: \"확인\",\n})\n\nconst app = firebase.initializeApp({\n  apiKey: \"AIzaSyA2HnWBN2GVgiiLZZT4VJkjbmEr1vHKK_8\",\n  authDomain: \"wedding-9352a.firebaseapp.com\",\n  databaseURL: \"https://wedding-9352a.firebaseio.com\",\n  projectId: \"wedding-9352a\",\n  storageBucket: \"wedding-9352a.appspot.com\",\n  messagingSenderId: \"161521616689\"\n})\n\nReactDOM.render(\n  <App firebase={app} />,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/sw.787f1892.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sw_1.e1ca6775.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sw_3.e37b6732.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SW_6_p.5bd03e66.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SW_10_f.1f5d0b1c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/SW_11.fffa7daf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ssw_1.2c96788c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/draw.edc2328e.png\";","module.exports = __webpack_public_path__ + \"static/media/flower.e80e6b13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/message_icon_touched.8bca4298.png\";","module.exports = __webpack_public_path__ + \"static/media/phone_icon_touched.ccbf7adf.png\";"],"sourceRoot":""}